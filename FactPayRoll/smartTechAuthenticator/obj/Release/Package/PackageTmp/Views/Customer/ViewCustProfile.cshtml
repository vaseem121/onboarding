@model smartTechAuthenticator.ViewModels.CustomerInfoViewModel
@{
    ViewBag.Title = "ViewAdminProfile";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@*<style>
        .text-end {
            text-align: left !important;
        }
    </style>*@
<style>
    .text-end {
        text-align: left !important;
    }

    .card {
        box-shadow: 0 0 10px rgb(0 0 0 / 30%);
        border-radius: 10px;
        padding: 10px;
        margin-top: 50px;
    }
   
    .page-breadcrumb .col-12 {
        display: flex !important;
    }
</style>
<div class="page-breadcrumb">
    <div class="row">
        <div class="col-12 d-flex no-block align-items-center">
            <h4 class="page-title">View Profile</h4>
            <div class="ms-auto text-end">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index","Customer")">Home</a></li>
                        <li class="breadcrumb-item active" aria-current="page">
                            View Profile
                        </li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-6">
            <div class="card">

                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.Id)
                <div class="card-body">
                    <h4 class="card-title">Profile Information</h4>
                    <div class="form-group row">
                        @Html.LabelFor(x => x.Name, new { @class = "col-sm-3 text-end control-label col-form-label" })
                        <div class="col-sm-9">
                            @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(x => x.MobileNo, new { @class = "col-sm-3 text-end control-label col-form-label" })
                        <div class="col-sm-9">
                            @Html.TextBoxFor(x => x.MobileNo, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.StateId, htmlAttributes: new { @class = "col-sm-3 text-end control-label col-form-label" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.StateId, (IEnumerable<SelectListItem>)ViewData["States"], "Select State", new { @id = "stateId", @class = "form-control", @disabled = "disabled", onchange = "SelectedIndexChanged()" })
                        </div>
                    </div>


                    <div class="form-group row">
                        @Html.LabelFor(model => model.DistricttId, htmlAttributes: new { @class = "col-sm-3 text-end control-label col-form-label" })
                        <div class="col-sm-9">
                            @Html.DropDownListFor(model => model.DistricttId, (IEnumerable<SelectListItem>)ViewData["Districstts"], "Select District", new { @class = "form-control", @disabled = "disabled" })
                        </div>
                    </div>


                    <div class="form-group row">
                        @Html.LabelFor(x => x.Address1, new { @class = "col-sm-3 text-end control-label col-form-label" })
                        <div class="col-sm-9">
                            @Html.TextBoxFor(model => model.Address1, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(x => x.Address2, new { @class = "col-sm-3 text-end control-label col-form-label" })
                        <div class="col-sm-9">
                            @Html.TextBoxFor(model => model.Address2, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(x => x.Address3, new { @class = "col-sm-3 text-end control-label col-form-label" })
                        <div class="col-sm-9">
                            @Html.TextBoxFor(model => model.Address3, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>

                </div>

                <div class="form-group row">
                    <div class="col-md-6 pull-right"></div>
                    <div class="col-md-6 ">
                        <a class="btn btn-primary pull-right" href="@Url.Action("Index", "Customer")"><i class="mdi mdi-account me-1 ms-1"></i>Back</a>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

