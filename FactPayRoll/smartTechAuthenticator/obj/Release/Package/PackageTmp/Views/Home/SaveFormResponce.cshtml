@using smartTechAuthenticator.Models;
@model smartTechAuthenticator.ViewModels.FormPropertyViewModel
@{
    ViewBag.Title = "SaveFormResponce";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
    var aaaa = 1
;}


<style>
    .btns button {
        width: 46%;
        margin-bottom: 20px;
        border-radius: 4px;
        min-height: 50px;
        background: #2d68a6;
        border-color: #2d68a6;
        margin-right: 3%;
        text-align: left;
    }

        .btns button:hover {
            background: #2d68a6;
        }

    section.form-upper-wrapper {
        padding: 50px 0px 115px 0px;
    }

    .form-wrapper button.btn.btn-secondary {
        padding: 8px 25px;
    }

    .form-wrapper .group {
        display: flex;
        justify-content: space-between;
        position: relative;
    }

        .form-wrapper .group .icons {
            position: absolute;
            right: 0;
            top: -28px;
        }

        .form-wrapper .group .mb-3 {
            width: 49%;
        }

    section.form-wrapper .col-lg-8 {
        display: flex;
    }

    section.form-upper-wrapper .form-wrapper {
        width: 97%;
    }

        section.form-upper-wrapper .form-wrapper form > label {
            font-weight: bold;
            color: #545554;
        }

        section.form-upper-wrapper .form-wrapper form .group label {
            color: #9e9e9e;
        }

        section.form-upper-wrapper .form-wrapper h3 {
            padding-bottom: 15px;
            border-bottom: 2px solid #cfcccc;
            margin-bottom: 20px;
        }

        section.form-upper-wrapper .form-wrapper form > label span {
            color: red;
        }

    section.form-upper-wrapper .col-lg-8 {
        display: flex;
        justify-content: space-between;
    }

    .section.form-upper-wrapper .icons a {
        text-decoration: none;
    }

    section.form-upper-wrapper .icons a {
        text-decoration: none;
        color: gray;
    }

        section.form-upper-wrapper .icons a:last-child {
            color: #c64843;
        }

    .btns button i {
        margin-right: 10px;
    }

    .heading {
        margin-bottom: 30px;
    }

        .heading h5 {
            display: flex;
            justify-content: space-between;
            color: #484848;
        }

            .heading h5 i {
                cursor: pointer;
                transition: all 0.4s ease;
            }

            .heading h5.active i {
                transform: rotate(-180deg);
            }


    div#captchaModal input#flexSwitchCheckDefault {
        border-radius: 2em;
        margin-left: 0;
    }

    div#captchaModal label.form-check-label {
        margin-left: 40px;
    }

    div#captchaModal .form-check.form-switch {
        padding: 0;
    }

    div#NumberSliderModal input#flexSwitchCheckDefault {
        border-radius: 2em;
        margin-left: 0;
    }

    div#NumberSliderModal label.form-check-label {
        margin-left: 40px;
    }

    div#NumberSliderModal .form-check.form-switch {
        padding: 0;
    }

    .form-wrapper .group .mb-6 {
        width: 100%;
        margin-bottom: 15px;
    }

    .group-wrap {
        background: #fff;
        padding: 10px;
        border-radius: 6px;
        margin-bottom: 20px;
        border: 1px dashed #ccc;
    }

    .page-wrapper {
        background: #fff;
    }

    .modal {
        z-index: 9999 !important;
        margin-top: 0px !important;
    }

    @@media(max-width:1110px) and (min-width: 992px) {
        section.form-upper-wrapper .col-lg-4 {
            width: 40%;
        }

        section.form-upper-wrapper .col-lg-8 {
            width: 60%;
        }
    }



    @@media(max-width:991px) {
        section.form-upper-wrapper .col-lg-4 {
            margin-bottom: 30px;
        }

        section.form-upper-wrapper .col-lg-8 {
            margin-bottom: 30px;
        }

        section.form-upper-wrapper .form-wrapper {
            width: 85%;
        }

        .btns button:nth-child(even) {
            margin-right: 0;
            width: 50%;
        }
    }


    @@media(max-width: 479px) {
        .btns button {
            margin-right: 0;
            width: 100%;
        }

            .btns button:nth-child(even) {
                width: 100%;
            }

        .form-wrapper .group {
            flex-direction: column;
        }

            .form-wrapper .group .mb-3 {
                width: 100%;
            }

        section.form-upper-wrapper .form-wrapper {
            width: 90%;
        }
    }
</style>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css" integrity="sha512-5A8nwdMOWrSz20fDsjczgUidUBR8liPYU+WymTZP1lmY9G6Oc7HlZv156XqnsgNUzTyMefFTcsFH/tnJE/+xBg==" crossorigin="anonymous" referrerpolicy="no-referrer" />

@Html.HiddenFor(Model => Model.fId)
<div class="page-breadcrumb" style="">
    <div class="row">
        <div class="col-12 d-flex no-block align-items-center">
            <h4 class="page-title">Form View</h4>
            <div class="ms-auto text-end">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="@Url.Action("FormAssign", "Home")">Forms</a></li>
                        <li class="breadcrumb-item active" aria-current="page">
                            Form View
                        </li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
</div>
<section class="form-upper-wrapper">
    <div class="container-fluid">
        <div class="inner-wrapper">
            <div class="row">
                <div class="col-lg-2"></div>
                <div class="col-lg-8">
                    <div class="form-wrapper">
                        @if (Model.formview != null)
                        {
                            <div class="title">
                                <h3>@Model.formview.FormName</h3>


                            </div>
                            using (Html.BeginForm("SaveFormResponce", "Home", FormMethod.Post, new { @class = "form-horizontal", @enctype = "multipart/form-data" }))
                            {
                                if (Model.FormPropertyViewList != null)
                                {
                                    @Html.HiddenFor(Model => Model.formview.FormId)
                                    @Html.HiddenFor(Model => Model.formview.FormName)

                                    for (var i = 0; i < Model.FormPropertyViewList.Count; i++)
                                    {
                                        if (Model.FormPropertyViewList[i].InputType == FieldType.SingleLineText)
                                        {
                                            <div class="group-wrap">
                                                <label for="" class="form-label">@Model.FormPropertyViewList[i].Name</label>
                                                <div class="group">
                                                    <div class="mb-6">
                                                        @Html.TextBoxFor(model => model.FormPropertyViewList[i].NameValue, new { @class = "form-control" })
                                                        @Html.HiddenFor(x => x.FormPropertyViewList[i].Id)
                                                        @Html.HiddenFor(x => x.FormPropertyViewList[i].InputType)
                                                    </div>

                                                </div>
                                            </div>
                                        }
                                        else if (Model.FormPropertyViewList[i].InputType == FieldType.ParagraphText)
                                        {
                                            <div class="group-wrap">
                                                <label for="" class="form-label">@Model.FormPropertyViewList[i].Name </label>
                                                <div class="group">
                                                    <div class="mb-6">
                                                        @Html.TextAreaFor(model => model.FormPropertyViewList[i].NameValue, new { @class = "form-control", @rows = "3" })
                                                        @Html.HiddenFor(x => x.FormPropertyViewList[i].Id)
                                                        @Html.HiddenFor(x => x.FormPropertyViewList[i].InputType)
                                                    </div>

                                                </div>
                                            </div>
                                        }
                                        else if (Model.FormPropertyViewList[i].InputType == FieldType.Dropdown)
                                        {
                                            <div class="group-wrap">
                                                <label for="" class="form-label">@Model.FormPropertyViewList[i].Name </label>
                                                <div class="group">
                                                    <div class="mb-6">
                                                        @Html.HiddenFor(x => x.FormPropertyViewList[i].InputType)
                                                        @Html.HiddenFor(x => x.FormPropertyViewList[i].Id)

                                                        @Html.DropDownListFor(x => x.FormPropertyViewList[i].NameValue, new SelectList(Model.FormPropertyViewList[i].DropdownViewList, "Id", "OptionText"), "--Select Status--", new { @class = "form-control" })

                                                    </div>

                                                </div>
                                            </div>
                                        }
                                        else if (Model.FormPropertyViewList[i].InputType == FieldType.MultipleChoice)
                                        {
                                            <div class="group-wrap">
                                                <label for="" class="form-label">@Model.FormPropertyViewList[i].Name </label>
                                                @Html.HiddenFor(x => x.FormPropertyViewList[i].InputType)
                                                @Html.HiddenFor(x => x.FormPropertyViewList[i].Id)
                                                <div class="group">
                                                    <div class="mb-6">
                                                        @for (var l = 0; l < Model.FormPropertyViewList[i].MultipleChoiceViewList.Count; l++)
                                                        {
                                                            @Html.RadioButtonFor(m => m.FormPropertyViewList[i].NameValue, @Model.FormPropertyViewList[i].MultipleChoiceViewList[l].Id, new { id = @Model.FormPropertyViewList[i].MultipleChoiceViewList[l].Id })
                                                            <label for="@Model.FormPropertyViewList[i].MultipleChoiceViewList[l].Id">@Model.FormPropertyViewList[i].MultipleChoiceViewList[l].ChoiceText</label>
                                                              <br />
                                                            }
                                                    </div>

                                                </div>
                                            </div>
                                        }
                                        else if (Model.FormPropertyViewList[i].InputType == FieldType.Checkboxes)
                                        {
                                            <div class="group-wrap">
                                                <label for="" class="form-label">@Model.FormPropertyViewList[i].Name </label>
                                                @Html.HiddenFor(x => x.FormPropertyViewList[i].InputType)
                                                @Html.HiddenFor(x => x.FormPropertyViewList[i].Id)
                                                <div class="group">
                                                    <div class="mb-6">
                                                        @for (var k = 0; k < Model.FormPropertyViewList[i].CheckBoxViewList.Count; k++)
                                                        {
                                                            @Html.HiddenFor(x => x.FormPropertyViewList[i].CheckBoxViewList[k].Id)
                                                            @Html.HiddenFor(x => x.FormPropertyViewList[i].CheckBoxViewList[k].CheckboxText)
                                                            @Html.CheckBoxFor(x => x.FormPropertyViewList[i].CheckBoxViewList[k].CheckboxValue)
                                                            <label>@Model.FormPropertyViewList[i].CheckBoxViewList[k].CheckboxText</label>
                                                            <br />
                                                        }
                                                    </div>

                                                </div>
                                            </div>
                                        }
                                        else if (Model.FormPropertyViewList[i].InputType == FieldType.Numbers)
                                        {
                                            <div class="group-wrap">
                                                <label for="" class="form-label">@Model.FormPropertyViewList[i].Name </label>
                                                @Html.HiddenFor(x => x.FormPropertyViewList[i].InputType)
                                                @Html.HiddenFor(x => x.FormPropertyViewList[i].Id)
                                                <div class="group">
                                                    <div class="mb-6">
                                                        @Html.TextBoxFor(model => model.FormPropertyViewList[i].NameValue, new { @Type = "number", @class = "form-control" })

                                                    </div>

                                                </div>
                                            </div>
                                        }
                                        else if (Model.FormPropertyViewList[i].InputType == FieldType.Name)
                                        {
                                            <div class="group-wrap">
                                                <label for="" class="form-label">@Model.FormPropertyViewList[i].Name </label>
                                                @Html.HiddenFor(x => x.FormPropertyViewList[i].InputType)
                                                @Html.HiddenFor(x => x.FormPropertyViewList[i].Id)
                                                <div class="group">
                                                    <div class="mb-6">
                                                        @Html.TextBoxFor(model => model.FormPropertyViewList[i].NameValue, new { @class = "form-control" })

                                                    </div>

                                                </div>
                                            </div>
                                        }
                                        else if (Model.FormPropertyViewList[i].InputType == FieldType.Email)
                                        {
                                            <div class="group-wrap">
                                                <label for="" class="form-label">@Model.FormPropertyViewList[i].Name </label>
                                                @Html.HiddenFor(x => x.FormPropertyViewList[i].InputType)
                                                @Html.HiddenFor(x => x.FormPropertyViewList[i].Id)
                                                <div class="group">
                                                    <div class="mb-6">
                                                        @Html.TextBoxFor(model => model.FormPropertyViewList[i].NameValue, new { @Type = "email", @class = "form-control" })


                                                    </div>

                                                </div>
                                            </div>
                                        }
                                        else if (Model.FormPropertyViewList[i].InputType == FieldType.NumberSlider)
                                        {
                                            <div class="group-wrap">
                                                <label for="" class="form-label">Number Slider</label>
                                                @Html.HiddenFor(x => x.FormPropertyViewList[i].InputType)
                                                @Html.HiddenFor(x => x.FormPropertyViewList[i].Id)
                                                <div class="group">
                                                    <div class="mb-6">
                                                        @Html.TextBoxFor(model => model.FormPropertyViewList[i].NameValue, new { @type = "range", @max = "100", @min = "1", @value = "1", @style = "width: 100%" })
                                                    </div>

                                                </div>
                                            </div>
                                        }
                                        else if (Model.FormPropertyViewList[i].InputType == FieldType.Captcha)
                                        {
                                            <div class="group-wrap">
                                                <label for="" class="form-label">Captcha</label>
                                                @Html.HiddenFor(x => x.FormPropertyViewList[i].InputType)
                                                <div class="group">
                                                    <div class="mb-6">
                                                        <div class="g-recaptcha" data-sitekey="6Lejj2MUAAAAAMRtWMsDxj7Rh7wzDPeM8FlPtp4f"></div>
                                                    </div>

                                                </div>
                                            </div>
                                        }
                                        else if (Model.FormPropertyViewList[i].InputType == FieldType.Photo)
                                        {
                                            <div class="group-wrap">
                                                <label for="" class="form-label">Captcha</label>
                                                @Html.HiddenFor(x => x.FormPropertyViewList[i].InputType)
                                                <div class="group">
                                                    <div class="mb-6">
                                                        @Html.TextBox("file", "", new { type = "file" })
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }

                                }
                                <button type="submit" class="btn btn-primary">
                                    Submit
                                </button>

                            }
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<script src="~/Content/assets-mall/js/jquery.min.js"></script>
<script type="text/javascript">
    $("#FormPropertyViewList_3__Id").change(function () {
        var rValSize = $(".test:checked ").val();
        alert(rValSize);
        $("#hgfh").val(rValSize);
    });
</script>

