@model smartTechAuthenticator.Models.TrackingForms
@{
    ViewBag.Title = "EditVeryfied";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<style>
    .text-end {
        text-align: left !important;
    }
    .valuebool{
        width:160px;
    }
</style>
<div class="page-breadcrumb">
    <div class="row">
        <div class="col-12 d-flex no-block align-items-center">
            <h4 class="page-title">Customers</h4>
            <div class="ms-auto text-end">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        @if(Model.IsVerified == 1)
                        {
                            <li class="breadcrumb-item"><a href="@Url.Action("ViewCertificate", "Customer")">Customers</a></li>
                            <li class="breadcrumb-item active" aria-current="page">
                                Customers
                            </li>
                        }
                        else if(Model.IsVerified == 0)
                        {
                            <li class="breadcrumb-item"><a href="@Url.Action("UnVerifiedCertificate", "Customer")">Customers</a></li>
                            <li class="breadcrumb-item active" aria-current="page">
                                Customers
                            </li>
                        }
                        else
                        {
                            <li class="breadcrumb-item"><a href="@Url.Action("RejectCertificate", "Customer")">Customers</a></li>
                            <li class="breadcrumb-item active" aria-current="page">
                                Customers
                            </li>
                        }
                    </ol>
                </nav>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-6">
            <div class="card">
                @using (Html.BeginForm("UpdateEditVeryfied", "Customer", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
                {

                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(x => x.Id)
                    @Html.HiddenFor(x => x.CertificateImage)
                    <div class="card-body">
                        <h4 class="card-title">Certificate Information</h4>

                        <div class="form-group row">
                            @Html.LabelFor(x => x.Name, new { @class = "col-sm-3 text-end control-label col-form-label" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
                            </div>
                            </div>
                        <div class="form-group row">
                            @Html.LabelFor(x => x.IsVerified, new { @class = "col-sm-3 text-end control-label col-form-label" })
                            <div class="col-sm-9">
                                @if(Model.IsVerified ==1)
                                {
                                @Html.DropDownListFor(m => m.IsVerified, new SelectList(new[] { new SelectListItem { Value = "1", Text = "Verified" }, new SelectListItem { Value = "0", Text = "Pending" }, new SelectListItem { Value = "2", Text = "Rejected" }, }, "Value", "Text", Model), new { @class = "valuebool form-control" })
                                }
                                else if(Model.IsVerified ==2)
                                {
                                @Html.DropDownListFor(m => m.IsVerified, new SelectList(new[] { new SelectListItem { Value = "0", Text = "Pending" }, new SelectListItem { Value = "1", Text = "Verified" }, new SelectListItem { Value = "2", Text = "Rejected" }, }, "Value", "Text", Model), new { @class = "valuebool form-control" })
                                }
                                else
                                {
                                @Html.DropDownListFor(m => m.IsVerified, new SelectList(new[] { new SelectListItem { Value = "2", Text = "Rejected" }, new SelectListItem { Value = "1", Text = "Verified" }, new SelectListItem { Value = "0", Text = "Pending" }, }, "Value", "Text", Model), new { @class = "valuebool form-control" })
                                }

                            </div>
                            </div>
                        </div>
                    <div class="">
                        <div class="card-body">
                            @if (Model.IsVerified == 1)
                            {
                                <a href="@Url.Action("ViewCertificate","Customer" )" class="btn btn-danger" style="float: right;margin:5px">
                                    Cancel
                                </a>
                            }
                            else if (Model.IsVerified == 0)
                            {
                                <a href="@Url.Action("UnVerifiedCertificate","Customer" )" class="btn btn-danger" style="float: right;margin:5px">
                                    Cancel
                                </a>
                            }
                            else
                            {
                                <a href="@Url.Action("RejectCertificate","Customer" )" class="btn btn-danger" style="float: right;margin:5px">
                                    Cancel
                                </a>
                            }
                            <button type="submit" class="btn btn-primary" style="float: right; margin: 5px">
                                Update
                            </button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<script src="~/Content/assets-mall/js/jquery.min.js"></script>

